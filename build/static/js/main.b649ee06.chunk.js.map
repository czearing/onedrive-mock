{"version":3,"sources":["newStyled/getStyleElement.ts","newStyled/parseSelectors.ts","newStyled/css.ts","newStyled/ThemeProvider.tsx","newStyled/styled.tsx","StyleHelpers.ts","themeVariables.ts","theme.ts","Icon.tsx","fonts.ts","commonStyles.ts","testData.tsx","App.tsx","AppWithCSS.tsx","index.tsx"],"names":["_styleElement","_lastStyleElement","getStyleElement","document","styleElement","createElement","setAttribute","head","type","nextElementSibling","insertBefore","appendChild","createStyleElement","window","requestAnimationFrame","undefined","DefaultSelector","_rules","css","rulesString","classNames","selectors","rules","tokenIndex","selector","length","search","section","slice","trim","pair","split","name","value","newSelector","indexOf","substring","parseSelectors","push","_findClass","_addClass","join","names","className","val","_counter","CharacterCount","Characters","Math","floor","getClassName","style","rule","concat","sheet","insertRule","_insertRule","replace","getRules","ruleStrings","_i","_styles","Array","from","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","cssText","err","return","JSON","stringify","counter","ThemeContext","React","default","styled","Component","options","arguments","styles","parentStyles","__styles","argCache","Map","__component","result","allProps","as","props","Object","objectWithoutProperties","Resolved","theme","viewProps","objectSpread","state","input","_len","argSets","_key","_argSets","args","i","part","inputValue","_scrub","has","set","get","__retVal","cssStringArray","_i2","_argSets2","parts","shift","resolveClass","react","displayName","forEach","StyleHelpers","StyleMethod","msStyled","ThemeProvider","Provider","children","location","emStyled","emThemeProvider","scStyled","scThemeProvider","BorderColor","FocusBorderColor","TextColor","ApplyThemeStyle","ThemeVariables","LightScheme","StrongScheme","DarkScheme","DarkerScheme","LightTheme","strong","neutral","dark","DarkTheme","Icon","iconName","p","icon","getIcon","Error","assign","data-icon-name","subset","code","BodyFont","NoWrapStyle","FolderIcon","src","width","height","Columns","key","minWidth","maxWidth","justifyContent","alignItems","textAlign","Icon_Icon","flexGrow","canSort","Items","map","item","index","testData_FolderIcon","nameRow","fontSize","modified","sharing","size","round","random","AppFrame","div","_templateObject","Fonts","Button","button","_templateObject2","SquareButton","_templateObject3","Header","_templateObject4","ProductTitle","h1","_templateObject5","PersonaCoin","_templateObject6","CommandBar","_templateObject7","CommandButton","_templateObject8","Search","_templateObject9","SideNav","_templateObject10","SideNavButton","_templateObject11","ItemView","_templateObject12","Breadcrumb","_templateObject13","Folders","_templateObject14","FolderButton","_templateObject15","FolderImage","position","alignSelf","left","top","FolderTitle","_templateObject16","FolderDate","_templateObject17","Folder","App_FolderImage","date","DetailsList","_templateObject18","DetailsCheckButton","marginTop","transform","DetailsHeaderContainer","_templateObject19","DetailsHeaderCell","_templateObject20","FontSizes","small","DetailsHeaderButton","_templateObject21","DetailsHeader","App_DetailsCheckButton","flexShrink","column","DetailsRowContainer","_templateObject22","DetailsRowCell","_templateObject23","DetailsRow","columns","Persona","create","Base","_p$as","C","cx","AppWithCSS_FolderButton","AppWithCSS_FolderImage","AppWithCSS_FolderTitle","AppWithCSS_FolderDate","AppWithCSS_Button","AppWithCSS_DetailsHeaderContainer","AppWithCSS_DetailsCheckButton","AppWithCSS_DetailsHeaderCell","AppWithCSS_DetailsRowContainer","AppWithCSS_DetailsRowCell","AppWithCSS_PersonaCoin","initializeIcons","rootElement","getElementById","RenderedApp","_React$useState","_React$useState2","slicedToArray","isDark","setDark","_React$useState3","_React$useState4","isListView","setListView","App_ThemeProvider","App_Persona","display","onClick","App_DetailsHeader","App_DetailsRow","App_Folder","AppWithCSS_AppFrame","AppWithCSS_Header","AppWithCSS_SquareButton","AppWithCSS_ProductTitle","AppWithCSS_Persona","AppWithCSS_Search","AppWithCSS_CommandBar","AppWithCSS_CommandButton","AppWithCSS_SideNav","AppWithCSS_SideNavButton","AppWithCSS_ItemView","AppWithCSS_Breadcrumb","AppWithCSS_DetailsList","AppWithCSS_DetailsHeader","AppWithCSS_DetailsRow","AppWithCSS_Folders","AppWithCSS_Folder","performance","mark","render","measure"],"mappings":"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","file":"static/js/main.b649ee06.chunk.js","sourcesContent":["let _styleElement;\r\nlet _lastStyleElement;\r\n\r\nexport function getStyleElement(): HTMLStyleElement {\r\n  if (!_styleElement && typeof document !== \"undefined\") {\r\n    _styleElement = createStyleElement();\r\n\r\n    // Reset the style element on the next frame.\r\n    window.requestAnimationFrame(() => {\r\n      _styleElement = undefined;\r\n    });\r\n  }\r\n  return _styleElement;\r\n}\r\n\r\nfunction createStyleElement(): HTMLStyleElement {\r\n  const styleElement = document.createElement(\"style\");\r\n  styleElement.setAttribute(\"data-ms\", \"1\");\r\n  const head = document.head!;\r\n\r\n  styleElement.type = \"text/css\";\r\n\r\n  if (_lastStyleElement && _lastStyleElement.nextElementSibling) {\r\n    head.insertBefore(styleElement, _lastStyleElement.nextElementSibling);\r\n  } else {\r\n    head.appendChild(styleElement);\r\n  }\r\n  _lastStyleElement = styleElement;\r\n\r\n  return styleElement;\r\n}\r\n","const DefaultSelector = \"&\";\r\n\r\nexport type SelectorsMap = {\r\n  [key: string]: {\r\n    [key: string]: string;\r\n  };\r\n};\r\n\r\nexport function parseSelectors(rules: string): SelectorsMap {\r\n  const selectors = {};\r\n  let tokenIndex = 0;\r\n  let selector = DefaultSelector;\r\n\r\n  while (rules.length > 0 && tokenIndex > -1) {\r\n    // Feels bad\r\n    tokenIndex = rules.search(/{|;|}/);\r\n\r\n    const section = rules.slice(0, tokenIndex).trim();\r\n\r\n    switch (rules[tokenIndex]) {\r\n      case \";\":\r\n        // Name value pair\r\n        const pair = section.split(\":\");\r\n        const name = pair[0].trim();\r\n        const value = pair[1].trim();\r\n        selectors[selector] = selectors[selector] || {};\r\n        selectors[selector][name] = value;\r\n        break;\r\n\r\n      case \"{\":\r\n        // Start of new selector\r\n        const newSelector = section.slice(0, section.length);\r\n\r\n        selector =\r\n          newSelector.indexOf(\"&\") === -1\r\n            ? selector + newSelector\r\n            : newSelector;\r\n        break;\r\n\r\n      case \"}\":\r\n        selector = DefaultSelector;\r\n        break;\r\n    }\r\n\r\n    rules = rules.substring(tokenIndex + 1);\r\n  }\r\n\r\n  return selectors;\r\n}\r\n","import { getStyleElement } from \"./getStyleElement\";\r\nimport { parseSelectors } from \"./parseSelectors\";\r\n\r\nlet _rules: {\r\n  [key: string]: {\r\n    [key: string]: {\r\n      [key: string]: string;\r\n    };\r\n  };\r\n} = {};\r\n\r\nexport function css(rulesString) {\r\n  const classNames = [];\r\n  const selectors = parseSelectors(rulesString);\r\n\r\n  for (const selector in selectors) {\r\n    const rules = selectors[selector];\r\n\r\n    for (let name in rules) {\r\n      const value = rules[name];\r\n\r\n      classNames.push(\r\n        _findClass(selector, name, value) || _addClass(selector, name, value)\r\n      );\r\n    }\r\n  }\r\n\r\n  return classNames.join(\" \");\r\n}\r\n\r\nfunction _findClass(selector, name, value) {\r\n  const names = (_rules[selector] = _rules[selector] || {});\r\n  const values = (names[name] = names[name] || {});\r\n\r\n  return values[value];\r\n}\r\n\r\nfunction _addClass(selector: string, name: string, value: string): string {\r\n  const className = (_rules[selector][name][value] = getClassName());\r\n\r\n  _insertRule(selector.replace(/&/g, \".\" + className), name, value);\r\n\r\n  return className;\r\n}\r\n\r\nfunction _insertRule(selector, name, value) {\r\n  const style = getStyleElement();\r\n  const rule = `${selector}{${name}:${value};}`;\r\n  const sheet = style.sheet as any;\r\n\r\n  // console.log(\"inserted\");\r\n\r\n  sheet.insertRule(rule, sheet.rules.length);\r\n}\r\n\r\nconst Characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst CharacterCount = Characters.length;\r\nlet _counter = 0;\r\n\r\nfunction getClassName(): string {\r\n  let className = '';\r\n  let val = _counter++;\r\n\r\n  if (val < CharacterCount) {\r\n    return Characters[val % CharacterCount];\r\n  } else {\r\n    while (val > 0) {\r\n      className = Characters[val % CharacterCount] + className;\r\n      val = Math.floor(val / CharacterCount);\r\n    }  \r\n  }\r\n\r\n  return className;\r\n}\r\n\r\n// Rehydration experiment.\r\n(document as any).getRules = () => {\r\n  const ruleStrings = [];\r\n\r\n  ruleStrings.push('<style data-ms=\"1\">');\r\n\r\n  const styles = Array.from(document.querySelectorAll(\"style[data-ms]\"));\r\n\r\n  for (const style of styles) {\r\n    const sheet = (style as any).sheet as any;\r\n    const rules = sheet.rules;\r\n\r\n    for (const rule of rules) {\r\n      ruleStrings.push(rule.cssText);\r\n    }\r\n  }\r\n\r\n  ruleStrings.push(\"</style>\");\r\n\r\n  ruleStrings.push('<script data-ms-hydrate=\"1\">');\r\n  ruleStrings.push(JSON.stringify({ rules: _rules, counter: _counter }));\r\n  ruleStrings.push(\"</script>\");\r\n\r\n  return ruleStrings.join(\"\\n\");\r\n};\r\n\r\nexport const parseStyles = () => {\r\n  const styles = document.querySelector(\"[data-ms-hydrate]\");\r\n\r\n  if (styles) {\r\n    const { rules, counter } = JSON.parse(styles.innerHTML);\r\n\r\n    _rules = rules;\r\n    _counter = counter;\r\n  }\r\n\r\n  // for (const style of styles) {\r\n  //   const rules = style.sheet.rules;\r\n\r\n  //   for (const rule of rules) {\r\n  //     const ruleString = rule.cssText;\r\n  //     const firstIndex = ruleString.indexOf(\"{\");\r\n  //     const secondIndex = ruleString.indexOf(\":\");\r\n  //     const thirdIndex = ruleString.indexOf(\";\");\r\n\r\n  //     let selector = ruleString.substring(0, firstIndex).trim();\r\n  //     const className = selector.match(/\\.a[0-9]+/g)[0].substring(1);\r\n  //     selector = selector.replace(/\\.a[0-9]+/g, \"&\");\r\n  //     const name = ruleString.substring(firstIndex + 1, secondIndex).trim();\r\n  //     const value = ruleString.substring(secondIndex + 1, thirdIndex).trim();\r\n\r\n  //     if (selector && name && value) {\r\n  //       _rules[selector] = _rules[selector] || {};\r\n  //       _rules[selector][name] = _rules[selector][name] || {};\r\n\r\n  //       if (_rules[selector][name][value] === undefined) {\r\n  //         _rules[selector][name][value] = className;\r\n  //         _counter++;\r\n  //         console.log(\"cache\", { selector, name, value, className });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport const ThemeContext = React.createContext({ default: {} });\r\n\r\nexport const ThemeProvider = props => (\r\n  <ThemeContext.Provider value={props.theme}>\r\n    {props.children}\r\n  </ThemeContext.Provider>\r\n);\r\n","import * as React from \"react\";\r\nimport { css } from \"./css\";\r\nimport { ThemeContext } from \"./ThemeProvider\";\r\n\r\nexport const ElementTypes = [\"div\", \"button\", \"h1\", \"h2\", \"h3\", \"a\"];\r\nexport type ComponentType = any;\r\nexport type StyledFunction = (\r\n  component: ComponentType\r\n) => React.StatelessComponent;\r\nexport interface StyledType extends StyledFunction {\r\n  div: StyledFunction;\r\n}\r\n\r\nexport const styled: any = (\r\n  Component: ComponentType,\r\n  options: { displayName?: string; state?: Function } = {}\r\n) => {\r\n  return function() {\r\n    const styles = arguments;\r\n    const parentStyles = Component.__styles;\r\n    const argCache = new Map();\r\n\r\n    Component = Component.__component || Component;\r\n\r\n    const result = allProps => {\r\n      const { as, className, ...props } = allProps;\r\n      const Resolved = as || Component;\r\n      const theme = React.useContext(ThemeContext);\r\n      const viewProps = {\r\n        ...(options.state ? options.state(props) : props),\r\n        theme\r\n      };\r\n\r\n      viewProps.className = resolveClass(\r\n        argCache,\r\n        viewProps,\r\n        parentStyles,\r\n        styles\r\n      );\r\n\r\n      if (className) {\r\n        viewProps.className += \" \" + className;\r\n      }\r\n\r\n      delete viewProps.theme;\r\n\r\n      return <Resolved {...viewProps} />;\r\n    };\r\n\r\n    result.displayName = options.displayName;\r\n    (result as any).__component = Component;\r\n    (result as any).__styles = styles;\r\n\r\n    return result;\r\n  };\r\n};\r\n\r\nfunction resolveClass(argCache, props, ...argSets) {\r\n  const input = [];\r\n\r\n  // First resolve args.\r\n  for (const args of argSets) {\r\n    if (args) {\r\n      for (let i = 1; i < args.length; i++) {\r\n        const part = args[i];\r\n\r\n        input.push(typeof part === \"function\" ? part(props) : part);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Next identify if the input has a cached result by walking a graph until we find the result.\r\n  for (let i = 0; i < input.length; i++) {\r\n    const inputValue = _scrub(input[i]);\r\n\r\n    if (!argCache.has(inputValue)) {\r\n      argCache.set(inputValue, new Map());\r\n    }\r\n\r\n    argCache = argCache.get(inputValue);\r\n  }\r\n\r\n  // Resolve as needed.\r\n  if (!argCache.__retVal) {\r\n    const cssStringArray = [];\r\n\r\n    for (const args of argSets) {\r\n      if (args) {\r\n        const parts = args[0];\r\n        for (let i = 0; i < parts.length; i++) {\r\n          cssStringArray.push(parts[i]);\r\n          if (i < parts.length - 1) {\r\n            const inputValue = input.shift();\r\n            if (inputValue !== undefined) {\r\n              cssStringArray.push(inputValue);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    argCache.__retVal = css(cssStringArray.join(\"\"));\r\n  }\r\n\r\n  return argCache.__retVal;\r\n}\r\n\r\nfunction _scrub(input) {\r\n  switch (input) {\r\n    case undefined:\r\n      return \"__undefined__\";\r\n    case null:\r\n      return \"__null__\";\r\n    default:\r\n      return input;\r\n  }\r\n}\r\n\r\nconst createFactory = type => {\r\n  (styled as any)[type] = styled(type);\r\n};\r\n\r\nElementTypes.forEach(type => (styled[type] = styled(type)));\r\n","import { styled as msStyled } from \"./newStyled/styled\";\r\nimport { ThemeProvider as msThemeProvider } from \"./newStyled/ThemeProvider\";\r\nimport { default as emStyled } from \"@emotion/styled\";\r\nimport { ThemeProvider as emThemeProvider } from \"emotion-theming\";\r\nimport {\r\n  default as scStyled,\r\n  ThemeProvider as scThemeProvider\r\n} from \"styled-components\";\r\n\r\nexport let StyleHelpers = {\r\n  StyleMethod: \"merge-styles 2 proto\",\r\n  styled: msStyled,\r\n  ThemeProvider: msThemeProvider\r\n};\r\n\r\nswitch (document.location.search) {\r\n  case \"?emotion\":\r\n    StyleHelpers = {\r\n      StyleMethod: \"emotion\",\r\n      styled: emStyled,\r\n      ThemeProvider: emThemeProvider\r\n    };\r\n    break;\r\n  case \"?styled-components\":\r\n    StyleHelpers = {\r\n      StyleMethod: \"styled-components\",\r\n      styled: scStyled,\r\n      ThemeProvider: scThemeProvider as any\r\n    };\r\n    break;\r\n}\r\n","export const ThemePrimary = `--main-primary`;\r\nexport const BackgroundColor = `--main-bg`;\r\nexport const BorderColor = `--main-border`;\r\nexport const BackgroundHoverColor = `--main-bg-hover`;\r\nexport const BackgroundPressedColor = `--main-bg-pressed`;\r\nexport const BackgroundDisabledColor = `--main-bg-disabled`;\r\nexport const FocusBorderColor = `--main-border-focused`;\r\nexport const SubTextColor = `--main-subtext`;\r\nexport const TextColor = `--main-text`;\r\nexport const TextDisabledColor = `--main-text-disabled`;\r\nexport const IconColor = `--main-icon`;\r\nexport const LinkColor = `--main-link`;\r\nexport const LinkHoverColor = `--main-link-hover`;\r\n","import * as ThemeVariables from \"./themeVariables\";\r\n\r\nconst ApplyThemeStyle = `\r\n  transition: background-color .1s linear;\r\n  background-color: var(${ThemeVariables.BackgroundColor});\r\n  color: var(${ThemeVariables.TextColor});\r\n`;\r\n\r\nconst LightScheme = `\r\n  ${ThemeVariables.BackgroundColor}: white;\r\n  ${ThemeVariables.BackgroundHoverColor}: #EEE;\r\n  ${ThemeVariables.BackgroundPressedColor}: #CCC;\r\n  ${ThemeVariables.FocusBorderColor}: black;\r\n  ${ThemeVariables.SubTextColor}: #888;\r\n  ${ThemeVariables.TextColor}: #333;\r\n  ${ThemeVariables.IconColor}: rgb(16, 110, 190);\r\n  ${ThemeVariables.BorderColor}: #eaeaea;\r\n  ${ApplyThemeStyle}\r\n`;\r\n\r\nconst StrongScheme = `\r\n  ${ThemeVariables.BackgroundColor}: #0078d4;\r\n  ${ThemeVariables.BackgroundHoverColor}: #2b88d8;\r\n  ${ThemeVariables.BackgroundPressedColor}: #71afe5;\r\n  ${ThemeVariables.FocusBorderColor}: #c7e0f4;\r\n  ${ThemeVariables.SubTextColor}: #888;\r\n  ${ThemeVariables.TextColor}: #fff;\r\n  ${ThemeVariables.IconColor}: #ff;\r\n  ${ThemeVariables.BorderColor}: #eaeaea;\r\n  ${ApplyThemeStyle}\r\n`;\r\n\r\nconst DarkScheme = `\r\n  ${ThemeVariables.BackgroundColor}: #484644;\r\n  ${ThemeVariables.BackgroundHoverColor}: #323130;\r\n  ${ThemeVariables.BackgroundPressedColor}: #222120;\r\n  ${ThemeVariables.FocusBorderColor}: white;\r\n  ${ThemeVariables.SubTextColor}: #aaa;\r\n  ${ThemeVariables.TextColor}: white;\r\n  ${ThemeVariables.IconColor}: white;\r\n  ${ThemeVariables.BorderColor}: #585654;\r\n  ${ApplyThemeStyle}\r\n`;\r\n\r\nconst DarkerScheme = `\r\n  ${ThemeVariables.BackgroundColor}: #383634;\r\n  ${ThemeVariables.BackgroundHoverColor}: #222120;\r\n  ${ThemeVariables.BackgroundPressedColor}: #121110;\r\n  ${ThemeVariables.FocusBorderColor}: white;\r\n  ${ThemeVariables.SubTextColor}: #aaa;\r\n  ${ThemeVariables.TextColor}: white;\r\n  ${ThemeVariables.IconColor}: white;\r\n  ${ThemeVariables.BorderColor}: #585654;\r\n  ${ApplyThemeStyle}\r\n`;\r\n\r\nconst NeutralScheme = `\r\n  ${ThemeVariables.BackgroundColor}: rgb(244,244,244);  \r\n  ${ThemeVariables.BackgroundHoverColor}: rgb(234, 234, 234);\r\n  ${ThemeVariables.BackgroundPressedColor}: rgb(218, 218, 218);\r\n  ${ThemeVariables.FocusBorderColor}: black;\r\n  ${ThemeVariables.SubTextColor}: #666;\r\n  ${ThemeVariables.TextColor}: black;\r\n  ${ThemeVariables.IconColor}: rgb(16, 110, 190);\r\n  ${ThemeVariables.BorderColor}: rgb(244,244,244);\r\n  ${ApplyThemeStyle}\r\n`;\r\n\r\nexport const LightTheme = {\r\n  default: LightScheme,\r\n  strong: StrongScheme,\r\n  neutral: NeutralScheme,\r\n  dark: DarkScheme\r\n};\r\n\r\nexport const DarkTheme = {\r\n  default: DarkScheme,\r\n  strong: DarkerScheme,\r\n  neutral: DarkScheme,\r\n  dark: DarkerScheme\r\n};\r\n","import * as React from \"react\";\r\nimport { getIcon } from \"office-ui-fabric-react\";\r\n\r\nexport const Icon = props => {\r\n  const { iconName, ...p } = props;\r\n  const icon = getIcon(iconName);\r\n\r\n  if (!icon) {\r\n    throw new Error(`No icon named ${iconName}`);\r\n  }\r\n\r\n  return (\r\n    <i\r\n      {...p}\r\n      data-icon-name={iconName}\r\n      className={icon.subset && icon.subset.className}\r\n    >\r\n      {icon.code}\r\n    </i>\r\n  );\r\n};\r\n","export const SemiBoldFont = `font-family: \"SegoeUI-SemiBold-final\", \"Segoe UI Semibold\", \"SegoeUI-Regular-final\", \"Segoe UI\", \"Segoe UI Web (West European)\", Segoe, -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", Tahoma, Helvetica, Arial, sans-serif;`;\r\nexport const SemiLightFont = `font-family: SegoeUI-SemiLight-final,\"Segoe UI Semilight\",SegoeUI-Regular-final,\"Segoe UI\",\"Segoe UI Web (West European)\",Segoe,-apple-system,BlinkMacSystemFont,Roboto,\"Helvetica Neue\",Tahoma,Helvetica,Arial,sans-serif;`;\r\nexport const BodyFont = `\r\n  font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  font-weight: 400;\r\n`;\r\n","import * as ThemeVariables from \"./themeVariables\";\r\nimport * as Fonts from \"./fonts\";\r\n\r\nexport const NoWrapStyle = `\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n","import * as React from \"react\";\r\nimport { Icon } from \"./Icon\";\r\n\r\nexport const FolderIcon = () => (\r\n  <img\r\n    src=\"https://az742526.vo.msecnd.net/files/odsp-next-release-odc_2019-03-15_20190322.001/odsp-media/images/itemtypes/20/folder.svg\"\r\n    style={{ width: 20, height: 20 }}\r\n  />\r\n);\r\n\r\nexport const Columns = [\r\n  {\r\n    key: \"type\",\r\n    style: {\r\n      minWidth: 32,\r\n      maxWidth: 32,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\"\r\n    },\r\n    children: <Icon iconName=\"Page\" />\r\n  },\r\n  {\r\n    key: \"nameRow\",\r\n    style: {\r\n      flexGrow: 1,\r\n      minWidth: 150,\r\n      maxWidth: 400\r\n    },\r\n    canSort: true,\r\n    children: (\r\n      <>\r\n        <span>Name</span>\r\n        <Icon iconName=\"SortUp\" />\r\n        <Icon iconName=\"ChevronDown\" />\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    key: \"modified\",\r\n    style: {\r\n      minWidth: 120,\r\n      maxWidth: 180\r\n    },\r\n    canSort: true,\r\n    children: (\r\n      <>\r\n        <span>Modified</span>\r\n        <Icon iconName=\"ChevronDown\" />\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    key: \"sharing\",\r\n    style: {\r\n      minWidth: 120,\r\n      maxWidth: 180\r\n    },\r\n    canSort: true,\r\n    children: (\r\n      <>\r\n        <span>Sharing</span>\r\n        <Icon iconName=\"ChevronDown\" />\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    key: \"size\",\r\n    style: {\r\n      minWidth: 120,\r\n      maxWidth: 180\r\n    },\r\n    canSort: true,\r\n    children: (\r\n      <>\r\n        <span>Size</span>\r\n        <Icon iconName=\"ChevronDown\" />\r\n      </>\r\n    )\r\n  }\r\n];\r\nexport const Items = Array.from({ length: 50 }).map((item, index) => ({\r\n  key: `${index}`,\r\n  type: <FolderIcon />,\r\n  name: `Item ${index}`,\r\n  nameRow: (\r\n    <>\r\n      <span style={{ fontSize: 14 }}>{`Item ${index}`} </span>\r\n      <Icon iconName=\"Share\" />\r\n      <Icon iconName=\"MoreVertical\" />\r\n    </>\r\n  ),\r\n  modified: \"Jan 26, 2017\",\r\n  sharing: \"Sharing\",\r\n  size: `${Math.round(Math.random() * 100)} KB`\r\n}));\r\n","import * as React from \"react\";\r\nimport { StyleHelpers } from \"./StyleHelpers\";\r\nimport { LightTheme, DarkTheme } from \"./theme\";\r\nimport { Icon } from \"./Icon\";\r\nimport * as ThemeVariables from \"./themeVariables\";\r\nimport * as Fonts from \"./fonts\";\r\nimport { NoWrapStyle } from \"./commonStyles\";\r\nimport { FontSizes } from \"@uifabric/styling\";\r\nimport { Items, Columns } from \"./testData\";\r\n\r\nconst { ThemeProvider, styled, StyleMethod } = StyleHelpers;\r\n\r\nconst AppFrame = styled.div`\r\n  ${props => props.theme.default}\r\n  ${Fonts.BodyFont}\r\n  display: grid;\r\n  grid-template-rows: 50px 40px auto;\r\n  grid-template-columns: 207px auto;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"search commands\"\r\n    \"nav content\";\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\nAppFrame.displayName = \"AppFrame\";\r\n\r\nconst flexGap = gap => `\r\n> * {\r\n  margin-left: ${gap};\r\n}\r\n> *:first-child {\r\n  margin-left: 0;\r\n}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  ${Fonts.BodyFont}\r\n  ${NoWrapStyle}\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  background: inherit;\r\n  border: none;\r\n  color: var(${ThemeVariables.TextColor});\r\n\r\n  :hover {\r\n    background-color: var(${ThemeVariables.BackgroundHoverColor});\r\n  }\r\n\r\n  :active {\r\n    background-color: var(${ThemeVariables.BackgroundPressedColor});\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 1px var(${ThemeVariables.FocusBorderColor}) inset;\r\n  }\r\n`;\r\n\r\nButton.displayName = \"Button\";\r\n\r\nconst SquareButton = styled(Button)`\r\n  width: ${props => props.size || \"50px\"};\r\n  height: ${props => props.size || \"50px\"};\r\n`;\r\n\r\nSquareButton.displayName = \"SquareButton\";\r\n\r\nconst Header = styled(\"div\", { displayName: \"Header\" })`\r\n  grid-area: header;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  ${props => props.theme.strong}\r\n`;\r\n\r\nconst ProductTitle = styled.h1`\r\n  ${Fonts.SemiBoldFont}\r\n  padding: 0 20px;\r\n  font-size: 16px;\r\n  flex-grow: 1;\r\n`;\r\nProductTitle.displayName = \"ProductTitle\";\r\n\r\nconst PersonaCoin = styled.div`\r\n  flex-shrink: 0;\r\n  background: rgb(126, 56, 120);\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CommandBar = styled.div`\r\n  ${props => props.theme.neutral}\r\n\r\n  grid-area: commands;\r\n  display: flex;\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst CommandButton = styled(Button)`\r\n  height: 40px;\r\n  padding: 0 12px;\r\n\r\n  & > [data-icon-name]:first-child {\r\n    color: var(${ThemeVariables.IconColor});\r\n  }\r\n\r\n  ${flexGap(\"8px\")}\r\n`;\r\n\r\nconst Search = styled.div`\r\n  grid-area: search;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 8px;\r\n  border-bottom: 1px solid var(${ThemeVariables.BorderColor});\r\n\r\n  & > * {\r\n    margin: 0 8px;\r\n  }\r\n`;\r\n\r\nconst SideNav = styled.div`\r\n  grid-area: nav;\r\n  display: flex;\r\n  padding: 20px 0;\r\n  border-right: 1px solid var(${ThemeVariables.BorderColor});\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n`;\r\n\r\nconst SideNavButton = styled(Button, { displayName: \"SideNavButton\" })`\r\n  justify-content: start;\r\n  font-weight: 100;\r\n  font-size: 18px;\r\n  padding: 0 16px;\r\n  height: 36px;\r\n`;\r\n\r\nconst ItemView = styled.div`\r\n  grid-area: content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px 32px;\r\n  overflow: auto;\r\n\r\n  & > * {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  & > *:first-child {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst Breadcrumb = styled.div`\r\n  font-size: 28px;\r\n  font-weight: 100;\r\n`;\r\n\r\nconst Folders = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n  grid-min-cells: 1000000;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nconst FolderButton = styled(Button)`\r\n  padding: 16px 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  text-align: center;\r\n  border-radius: 3px;\r\n\r\n  &:hover {\r\n    background: var(${ThemeVariables.BackgroundHoverColor});\r\n  }\r\n`;\r\n\r\nconst FolderImage = () => (\r\n  <div style={{ position: \"relative\", alignSelf: \"center\" }}>\r\n    <img src=\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/foldericons/folder-small_backplate.svg\" />\r\n    <img\r\n      style={{ position: \"absolute\", left: 0, top: 0 }}\r\n      src=\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/foldericons/folder-small_frontplate_thumbnail.svg\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst FolderTitle = styled.div`\r\n  ${NoWrapStyle}\r\n`;\r\n\r\nconst FolderDate = styled.div`\r\n  ${NoWrapStyle}\r\n  font-size: 12px;\r\n\r\n  color: var(${ThemeVariables.SubTextColor});\r\n`;\r\n\r\nconst Folder = props => (\r\n  <FolderButton>\r\n    <FolderImage />\r\n    <FolderTitle>{props.name}</FolderTitle>\r\n    <FolderDate>{props.date}</FolderDate>\r\n  </FolderButton>\r\n);\r\n\r\nconst DetailsList = styled.div``;\r\n\r\nconst DetailsCheckButton = props => (\r\n  <Button {...props} style={{ position: \"relative\", width: 40 }}>\r\n    <Icon iconName=\"CircleRing\" style={{ fontSize: 18 }} />\r\n    <Icon\r\n      style={{\r\n        fontSize: 16,\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        marginTop: -1.5,\r\n        transform: \"translate(-50%, -50%)\"\r\n      }}\r\n      iconName=\"StatusCircleCheckmark\"\r\n    />\r\n  </Button>\r\n);\r\n\r\nconst DetailsHeaderContainer = styled.div`\r\n  display: flex;\r\n  height: 32px;\r\n  line-height: 32px;\r\n  align-items: stretch;\r\n  border-bottom: 1px solid var(${ThemeVariables.BorderColor});\r\n`;\r\n\r\nconst DetailsHeaderCell = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n  font-size: ${FontSizes.small};\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  padding: 0 8px;\r\n\r\n  & > * {\r\n    margin-left: 4px;\r\n  }\r\n  & > *:first-child {\r\n    margin-left: 0;\r\n  }\r\n  ${NoWrapStyle}\r\n`;\r\n\r\nconst DetailsHeaderButton = styled(Button)`\r\n  justify-content: start;\r\n  font-size: ${FontSizes.small};\r\n`;\r\n\r\nconst DetailsHeader = props => (\r\n  <DetailsHeaderContainer>\r\n    <DetailsCheckButton size=\"40px\" style={{ flexShrink: 0 }} />\r\n    {Columns.map(column => (\r\n      <DetailsHeaderCell\r\n        {...column}\r\n        as={column.canSort && DetailsHeaderButton}\r\n      />\r\n    ))}\r\n  </DetailsHeaderContainer>\r\n);\r\n\r\nconst DetailsRowContainer = styled(DetailsHeaderContainer)`\r\n  width: 100%;\r\n  height: 42px;\r\n  line-height: 42px;\r\n\r\n  :hover {\r\n    background: var(${ThemeVariables.BackgroundHoverColor});\r\n  }\r\n  :active {\r\n    background: var(${ThemeVariables.BackgroundPressedColor});\r\n  }\r\n`;\r\n\r\nconst DetailsRowCell = styled(DetailsHeaderCell)``;\r\n\r\nconst DetailsRow = (props: { columns: any; item: any }) => (\r\n  <DetailsRowContainer>\r\n    <DetailsCheckButton as=\"span\" size=\"40px\" style={{ flexShrink: 0 }} />\r\n    {props.columns.map(column => (\r\n      <DetailsRowCell style={column.style}>\r\n        {props.item[column.key]}\r\n      </DetailsRowCell>\r\n    ))}\r\n  </DetailsRowContainer>\r\n);\r\n\r\nconst Persona = props => <PersonaCoin>DZ</PersonaCoin>;\r\n\r\nexport const App = props => {\r\n  const [isDark, setDark] = React.useState(false);\r\n  const [isListView, setListView] = React.useState(true);\r\n\r\n  return (\r\n    <ThemeProvider theme={isDark ? DarkTheme : LightTheme}>\r\n      <>\r\n        <AppFrame>\r\n          <Header>\r\n            <SquareButton>\r\n              <Icon iconName=\"waffle\" style={{ fontSize: 24 }} />\r\n            </SquareButton>\r\n            <ProductTitle>{`OneDrive (${StyleMethod})`}</ProductTitle>\r\n            <SquareButton>\r\n              <Icon iconName=\"help\" style={{ fontSize: 16 }} />\r\n            </SquareButton>\r\n            <SquareButton>\r\n              <Persona />\r\n            </SquareButton>\r\n          </Header>\r\n          <Search>\r\n            <Icon iconName=\"search\" />\r\n            <span>Search everything</span>\r\n          </Search>\r\n\r\n          <CommandBar>\r\n            <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n              <CommandButton>\r\n                <Icon iconName=\"add\" style={{ fontSize: 16 }} />\r\n                <span>New</span>\r\n                <Icon iconName=\"chevrondown\" style={{ fontSize: 12 }} />\r\n              </CommandButton>\r\n              <CommandButton>\r\n                <Icon iconName=\"upload\" style={{ fontSize: 16 }} />\r\n                <span>Upload</span>\r\n                <Icon iconName=\"chevrondown\" style={{ fontSize: 12 }} />\r\n              </CommandButton>\r\n              <CommandButton onClick={() => setDark(!isDark)}>\r\n                <Icon iconName=\"brush\" style={{ fontSize: 16 }} />\r\n                <span>{isDark ? \"Light mode\" : \"Dark mode\"}</span>\r\n              </CommandButton>\r\n            </div>\r\n\r\n            <CommandButton>\r\n              <Icon iconName=\"sortlines\" style={{ fontSize: 16 }} />\r\n              <span>Sort</span>\r\n              <Icon iconName=\"chevrondown\" style={{ fontSize: 12 }} />\r\n            </CommandButton>\r\n\r\n            <CommandButton onClick={() => setListView(!isListView)}>\r\n              <Icon\r\n                iconName={isListView ? \"list\" : \"viewall\"}\r\n                style={{ fontSize: 16 }}\r\n              />\r\n            </CommandButton>\r\n\r\n            <CommandButton>\r\n              <Icon iconName=\"info\" style={{ fontSize: 16 }} />\r\n            </CommandButton>\r\n          </CommandBar>\r\n\r\n          <SideNav>\r\n            <SideNavButton>Files</SideNavButton>\r\n            <SideNavButton>Recent</SideNavButton>\r\n            <SideNavButton>Photos</SideNavButton>\r\n            <SideNavButton>Shared</SideNavButton>\r\n            <SideNavButton>Recycle bin</SideNavButton>\r\n          </SideNav>\r\n\r\n          <ItemView>\r\n            <Breadcrumb>Files</Breadcrumb>\r\n\r\n            {isListView ? (\r\n              <DetailsList>\r\n                <DetailsHeader />\r\n                {Items.map(item => (\r\n                  <DetailsRow key={item.name} columns={Columns} item={item} />\r\n                ))}\r\n              </DetailsList>\r\n            ) : (\r\n              <Folders>\r\n                {Items.map(item => (\r\n                  <Folder key={item.name} {...item} />\r\n                ))}\r\n              </Folders>\r\n            )}\r\n          </ItemView>\r\n        </AppFrame>\r\n        {props.children}\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Icon } from \"./Icon\";\r\nimport { Items, Columns } from \"./testData\";\r\nimport cx from \"classnames\";\r\nimport \"./App.scss\";\r\n\r\n/**\r\n * Helper to create components quickly.\r\n */\r\nconst create = (\r\n  name,\r\n  Base: React.ReactType = \"div\",\r\n  className?: string\r\n) => p => {\r\n  const { as: C = Base, ...props } = p;\r\n\r\n  return <C {...props} className={cx(\"ms-\" + name, p.className, className)} />;\r\n};\r\n\r\nconst AppFrame = create(\"AppFrame\");\r\nconst Button = create(\"Button\", \"button\");\r\nconst SquareButton = create(\"SquareButton\", Button);\r\nconst Header = create(\"Header\", \"div\", \"ms-scheme-strong\");\r\nconst ProductTitle = create(\"ProductTitle\", \"h1\");\r\nconst PersonaCoin = create(\"PersonaCoin\");\r\nconst CommandBar = create(\"CommandBar\", \"div\", \"ms-scheme-neutral\");\r\nconst CommandButton = create(\"CommandButton\", Button);\r\nconst Search = create(\"Search\");\r\nconst SideNav = create(\"SideNav\", \"div\", \"ms-scheme-neutral\");\r\nconst SideNavButton = create(\"SideNavButton\");\r\nconst ItemView = create(\"ItemView\");\r\nconst Breadcrumb = create(\"Breadcrumb\");\r\nconst Folders = create(\"Folders\");\r\nconst FolderButton = create(\"FolderButton\", Button);\r\n\r\nconst FolderImage = () => (\r\n  <div style={{ position: \"relative\", alignSelf: \"center\" }}>\r\n    <img src=\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/foldericons/folder-small_backplate.svg\" />\r\n    <img\r\n      style={{ position: \"absolute\", left: 0, top: 0 }}\r\n      src=\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/foldericons/folder-small_frontplate_thumbnail.svg\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst FolderTitle = create(\"FolderTitle\");\r\nconst FolderDate = create(\"FolderDate\");\r\n\r\nconst Folder = props => (\r\n  <FolderButton>\r\n    <FolderImage />\r\n    <FolderTitle>{props.name}</FolderTitle>\r\n    <FolderDate>{props.date}</FolderDate>\r\n  </FolderButton>\r\n);\r\n\r\nconst DetailsList = create(\"DetailsList\");\r\n\r\nconst DetailsCheckButton = props => (\r\n  <Button {...props} style={{ position: \"relative\", width: 40 }}>\r\n    <Icon iconName=\"CircleRing\" style={{ fontSize: 18 }} />\r\n    <Icon\r\n      style={{\r\n        fontSize: 16,\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        marginTop: -1.5,\r\n        transform: \"translate(-50%, -50%)\"\r\n      }}\r\n      iconName=\"StatusCircleCheckmark\"\r\n    />\r\n  </Button>\r\n);\r\n\r\nconst DetailsHeaderContainer = create(\"DetailsHeaderContainer\");\r\nconst DetailsHeaderCell = create(\"DetailsHeaderCell\");\r\nconst DetailsHeaderButton = create(\"DetailsHeaderButton\", Button);\r\nconst DetailsHeader = props => (\r\n  <DetailsHeaderContainer>\r\n    <DetailsCheckButton size=\"40px\" style={{ flexShrink: 0 }} />\r\n    {Columns.map(column => (\r\n      <DetailsHeaderCell\r\n        key={column.key}\r\n        as={column.canSort && DetailsHeaderButton}\r\n        style={column.style}\r\n      >\r\n        {column.children}\r\n      </DetailsHeaderCell>\r\n    ))}\r\n  </DetailsHeaderContainer>\r\n);\r\n\r\nconst DetailsRowContainer = create(\r\n  \"DetailsRowContainer\",\r\n  DetailsHeaderContainer\r\n);\r\nconst DetailsRowCell = create(\"DetailsRowCell\", DetailsHeaderCell);\r\n\r\nconst DetailsRow = (props: { columns: any; item: any }) => (\r\n  <DetailsRowContainer>\r\n    <DetailsCheckButton as=\"span\" size=\"40px\" style={{ flexShrink: 0 }} />\r\n    {props.columns.map(column => (\r\n      <DetailsRowCell key={column.key} style={column.style}>\r\n        {props.item[column.key]}\r\n      </DetailsRowCell>\r\n    ))}\r\n  </DetailsRowContainer>\r\n);\r\n\r\nconst Persona = props => <PersonaCoin>DZ</PersonaCoin>;\r\n\r\nexport const AppWithCSS = props => {\r\n  const [isDark, setDark] = React.useState(false);\r\n  const [isListView, setListView] = React.useState(true);\r\n\r\n  return (\r\n    <>\r\n      <AppFrame\r\n        className={cx(\"ms-theme\", isDark ? \"ms-theme-dark\" : \"ms-theme-light\")}\r\n      >\r\n        <Header>\r\n          <SquareButton>\r\n            <Icon iconName=\"waffle\" style={{ fontSize: 24 }} />\r\n          </SquareButton>\r\n          <ProductTitle>{`OneDrive (sass + css variables)`}</ProductTitle>\r\n          <SquareButton>\r\n            <Icon iconName=\"help\" style={{ fontSize: 16 }} />\r\n          </SquareButton>\r\n          <SquareButton>\r\n            <Persona />\r\n          </SquareButton>\r\n        </Header>\r\n        <Search>\r\n          <Icon iconName=\"search\" />\r\n          <span>Search everything</span>\r\n        </Search>\r\n\r\n        <CommandBar>\r\n          <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n            <CommandButton>\r\n              <Icon iconName=\"add\" style={{ fontSize: 16 }} />\r\n              <span>New</span>\r\n              <Icon iconName=\"chevrondown\" style={{ fontSize: 12 }} />\r\n            </CommandButton>\r\n            <CommandButton>\r\n              <Icon iconName=\"upload\" style={{ fontSize: 16 }} />\r\n              <span>Upload</span>\r\n              <Icon iconName=\"chevrondown\" style={{ fontSize: 12 }} />\r\n            </CommandButton>\r\n            <CommandButton onClick={() => setDark(!isDark)}>\r\n              <Icon iconName=\"brush\" style={{ fontSize: 16 }} />\r\n              <span>{isDark ? \"Light mode\" : \"Dark mode\"}</span>\r\n            </CommandButton>\r\n          </div>\r\n\r\n          <CommandButton>\r\n            <Icon iconName=\"sortlines\" style={{ fontSize: 16 }} />\r\n            <span>Sort</span>\r\n            <Icon iconName=\"chevrondown\" style={{ fontSize: 12 }} />\r\n          </CommandButton>\r\n\r\n          <CommandButton onClick={() => setListView(!isListView)}>\r\n            <Icon\r\n              iconName={isListView ? \"list\" : \"viewall\"}\r\n              style={{ fontSize: 16 }}\r\n            />\r\n          </CommandButton>\r\n\r\n          <CommandButton>\r\n            <Icon iconName=\"info\" style={{ fontSize: 16 }} />\r\n          </CommandButton>\r\n        </CommandBar>\r\n\r\n        <SideNav>\r\n          <SideNavButton>Files</SideNavButton>\r\n          <SideNavButton>Recent</SideNavButton>\r\n          <SideNavButton>Photos</SideNavButton>\r\n          <SideNavButton>Shared</SideNavButton>\r\n          <SideNavButton>Recycle bin</SideNavButton>\r\n        </SideNav>\r\n\r\n        <ItemView>\r\n          <Breadcrumb>Files</Breadcrumb>\r\n\r\n          {isListView ? (\r\n            <DetailsList>\r\n              <DetailsHeader />\r\n              {Items.map(item => (\r\n                <DetailsRow key={item.name} columns={Columns} item={item} />\r\n              ))}\r\n            </DetailsList>\r\n          ) : (\r\n            <Folders>\r\n              {Items.map(item => (\r\n                <Folder key={item.name} {...item} />\r\n              ))}\r\n            </Folders>\r\n          )}\r\n        </ItemView>\r\n      </AppFrame>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { AppWithCSS } from \"./AppWithCSS\";\r\nimport { initializeIcons } from \"office-ui-fabric-react\";\r\nimport { measureRender, Timing } from \"./TimeTest\";\r\nimport \"./reset.css\";\r\n\r\ninitializeIcons();\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nlet RenderedApp = App;\r\n\r\nif (document.location.search === \"?css\") {\r\n  RenderedApp = AppWithCSS;\r\n}\r\n\r\nperformance.mark(\"start\");\r\nrender(<RenderedApp />, rootElement);\r\nperformance.mark(\"end\");\r\nperformance.measure(\"render\", \"start\", \"end\");\r\n\r\n// const options = {\r\n//   content: <App />,\r\n//   element: rootElement,\r\n//   instances: 1,\r\n//   iterations: 1\r\n// };\r\n\r\n// measureRender(options).then(timings =>\r\n//   render(\r\n//     <>\r\n//       <App>\r\n//         <Timing timings={timings} options={options} />\r\n//       </App>\r\n//     </>,\r\n//     rootElement\r\n//   )\r\n// );\r\n"],"sourceRoot":""}